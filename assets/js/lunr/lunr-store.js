var store = [{
        "title": "因子分析と主成分分析",
        "excerpt":"因子分析と主成分分析は似通った手法のように見える。 しかし、実際には大きく異なる点がある。      因子分析：人間が「こういう組み合わせが共通因子として存在するのではないか」と考えて因子負荷量を決める            人間が考えながら因子を作り出すので、解釈性の高い結果を作りだせる。他人への説明が容易。           主成分分析：「データに基づいて共通因子（＝主成分）を探してみる」方法で、因子負荷量はデータから自動的に決まる            自動的に作成されるので、得られた因子負荷量から、その因子が何を意味しているのかを人間が検討する。新しい発見につながる可能性がある。           ようするに、目的が異なるのである。   参考文献     江崎貴裕『分析者のためのデータ解釈学入門　データの本質をとらえる技術』（ソシム、2020年）  ","categories": ["データサイエンス・機械学習"],
        "tags": ["因子分析","主成分分析","教師なし学習"],
        "url": "/%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9%E3%83%BB%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/factor-analysis-and-principal-component-analysis/",
        "teaser": null
      },{
        "title": "内挿と外挿",
        "excerpt":"機械学習モデルを構築する上で、 本来データが存在するはずなのにサンプリングできていない（データを取得できていない）空間があると、 その部分の予測精度は落ちてしまう。これについて少し触れてみたい。 データの疎密と誤差の大小 とりあえず実験してみよう。ここでは、\\(x\\) が \\([-5,5]\\) の範囲における \\(\\cos x\\) を使ってモデルを構築し、 \\(x\\) が \\([-10,10]\\) の範囲の予測を行ってみている。 import numpy as np import matplotlib.pyplot as plt # データセット作成 train_X = np.arange(-5, 5, 0.2)[:, np.newaxis] train_y = np.cos(train_X[:,0]) test_X = np.arange(-10, 10, 0.2)[:, np.newaxis] test_y = np.cos(test_X[:,0]) # 予測モデルの構築 from sklearn.svm import SVR svr...","categories": ["データサイエンス・機械学習"],
        "tags": ["教師あり学習","予測誤差"],
        "url": "/%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9%E3%83%BB%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/interpolation_and_extrapolation/",
        "teaser": null
      }]
